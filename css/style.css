/*Step 1: Animate the logo with keyframes. It should start at a width of 25px and grow to 475px.  It should also start with an opacity of 0 and end with an opacity of 1. The animation should take 5 seconds and only happen when the page is loaded.*/
/*create animation*/
@keyframes mymove {
    /*starting state*/
    from {
        width: 25px;
        opacity: 0;
    }
    /*ending state*/
    to {
        width: 475px;
        opacity: 1;
    }
}
/*add animation to logo*/
#logo {
    animation: mymove 5s 1;
}

/*Step 2: Edit the body element to use the Poppins font (using Google fonts) with serif as a backup.  It should also use the image “concrete_seamless.png” as a background-image with a backup color of #f1f1f1.*/
body {
    /*Poppins font with serif as backup*/
    font-family: "Poppins", serif;
    /*background image with color as backup*/
    background-image: url("../images/concrete_seamless.png");
    background-color: #f1f1f1;
}

/*Step 3: Edit the css for the header tag (all instances) to use flex to match our example.*/
header {
    /*add flex*/
    display: flex;
    /*make items go downwards*/
    flex-direction: column;
    /*center the words inside the header*/
    align-items: center;
}

/*Step 4: Edit the css for the nav_links class to use flex to match our example. Do not modify the list items or the links - modify the nav_links class to use flex.*/
.nav_links {
    /*add flex*/
    display: flex;
    /*make items go downwards*/
    flex-direction: column;
}

/*Step 5: Style the links so that they have the same color even after they have been visited.*/
/*set both links and visited links to the same color (blue)*/
a, a:visited {
    color: blue;
}

/*Step 6: Identify the proper selector to style ONLY those header elements that are direct children of a card class.  The required styling is the following: background: #288088, solid 2px border using #45ADAD, 20px of padding on the top and the bottom, 50px border-radius on the top left and right corners.*/
/*use child selector to get direct children of card class*/
.card > header {
    /*add specified styling*/
    background: #288088;
    border: solid 2px #45ADAD;
    padding: 20px 0;
    border-radius: 50px 50px 0 0;
}
/*need to add border-radius to card class to match the border styling with the image*/
.card {
    border-radius: 50px 50px 0 0;
}

/*Step 7: Edit the css for the card class to match our example. Achieve this by using a flex-property to specify an initial “size” of 450px.  You need to think about this from a “flex” perspective and realize that flex-direction will affect the size of the elements.  You can see that in the mobile view they all have the same width.*/
.card {
    /*set width to constantly be 450px and can't grow or shrink*/
    flex: 0 0 450px;
}

/*Step 8: Edit the css for the pricing class to match our example. You should use flex and the cards should be centered both horizontally and vertically.*/
.pricing {
    /*make pricing a flexbox*/
    display: flex;
    /*makes it so size set in card will affect width*/
    flex-direction: row;
    /*centers content on page*/
    justify-content: center;
    /*wraps on page so doesn't overflow off screen*/
    flex-wrap: wrap;
}

/*Step 9: Style the images in the gallery class. These elements will have a solid 10px border with a color of #50C7C7, 10px margin on all four sides and a width of 300px.*/
/*get images inside the gallery class (logo image unaffected)*/
.gallery img {
    /*add specified styling*/
    border: solid 10px #50C7C7;
    margin: 10px;
    width: 300px;
}

/*Step 10: Edit the css for the gallery class to use flex to match our example.*/
.gallery {
    /*make gallery a flexbox*/
    display: flex;
    /*organizes items horizontally*/
    flex-direction: row;
    /*wraps on page so doesn't overflow off screen*/
    flex-wrap: wrap;
    /*centers content on page*/
    justify-content: center;
}